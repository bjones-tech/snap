@model SNAP.Models.Persistent.CandidateInterview
@using SNAP.Models.Helpers

@{
    ViewBag.Title = "Schedule Interview";
    ViewBag.Heading = null;
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.CandidateID)
    @Html.HiddenFor(model => model.Interviewer)
    @Html.HiddenFor(model => model.InterviewersEmail)
    @Html.HiddenFor(model => model.Organizer)
    @Html.HiddenFor(model => model.OrganizersName)
    @Html.HiddenFor(model => model.OrganizersEmail)
    @Html.HiddenFor(model => model.GeneralAppraisal)
    @Html.HiddenFor(model => model.TechKnowledge)
    @Html.HiddenFor(model => model.ProblemSolving)
    @Html.HiddenFor(model => model.Teamwork)
    @Html.HiddenFor(model => model.Communication)
    @Html.HiddenFor(model => model.CulturalFit)
    @Html.HiddenFor(model => model.Leadership)
    @Html.HiddenFor(model => model.OverallStrengths)
    @Html.HiddenFor(model => model.OverallConcerns)
    @Html.HiddenFor(model => model.OverallEvaluation)
    @Html.HiddenFor(model => model.OverallRating)
    @Html.HiddenFor(model => model.Recommendation)
    @Html.HiddenFor(model => model.AppointmentID)
    @Html.HiddenFor(model => model.Notes)
    @Html.HiddenFor(model => model.Complete)

    <div class="form-horizontal">
        <h4>@ViewBag.Heading</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(model => model.Organizer, "", new { @class = "text-danger" })
        @Html.ValidationMessage("MeetingRequest", "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Candidate.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Candidate.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Candidate.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InterviewersName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InterviewersName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.HiddenFor(model => model.InterviewersName)
                @Html.ValidationMessageFor(model => model.InterviewersName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Candidate.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Candidate.Notes, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Candidate.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (String.IsNullOrWhiteSpace(Model.AppointmentID))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.InterviewType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.InterviewType, new SelectList(ViewBag.InterviewTypes, Model.InterviewType), "Please Select", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.InterviewType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        @DatePicker.Label("InterviewDate")
                        @Html.TextBoxFor(model => model.InterviewDate, "{0:MMMM dd, yyyy}", new { @class = "form-control start-date-picker" })
                    </div>
                    @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create Meeting Request" class="btn btn-primary overlay-click" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.OrganizersName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrganizersName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    @Html.HiddenFor(model => model.OrganizersName)
                    @Html.ValidationMessageFor(model => model.OrganizersName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group">
                        @DatePicker.Label("InterviewDate")
                        @Html.TextBoxFor(model => model.InterviewDate, "{0:MMMM dd, yyyy h:mm tt}", new { @class = "form-control", disabled = "disabled" })
                    </div>
                    @Html.HiddenFor(model => model.InterviewDate)
                </div>
            </div>
        }
    </div>
}