@model SNAP.Models.Persistent.Contingent
@using SNAP.Models.Helpers

@{
    ViewBag.Title = "Update Contingent";
    ViewBag.Heading = String.Format("{0} {1}", Model.FirstName, Model.LastName);
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.GUID)
    @Html.HiddenFor(model => model.EmailAddress)
    @Html.HiddenFor(model => model.Name)
    @Html.HiddenFor(model => model.Department)
    @Html.HiddenFor(model => model.ManagersName)
    @Html.HiddenFor(model => model.Country)
    @Html.HiddenFor(model => model.Office)
    @Html.HiddenFor(model => model.State)

    <div class="form-horizontal">
        <h4>@ViewBag.Heading</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("AccountUpdate", "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.HiddenFor(model => model.FirstName)
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.HiddenFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.AccountCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    @DatePicker.Label("AccountCreated")
                    @Html.TextBoxFor(model => model.AccountCreated, "{0:MMMM dd, yyyy}", new { @class = "form-control", disabled = "disabled" })
                </div>
                @Html.HiddenFor(model => model.AccountCreated)
                @Html.ValidationMessageFor(model => model.AccountCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    @DatePicker.Label("AccountExpirationDate")
                    @Html.TextBoxFor(model => model.AccountExpirationDate, "{0:MMMM dd, yyyy}", new { @class = "form-control end-date-picker" })
                </div>
                @Html.ValidationMessageFor(model => model.AccountExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagersEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagersEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagersEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label class="checkbox">
                    @Html.CheckBoxFor(model => model.CodeOfEthics, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DisplayNameFor(model => model.CodeOfEthics)
                </label>
                <label class="checkbox">
                    @Html.CheckBoxFor(model => model.InfoSecurity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.DisplayNameFor(model => model.InfoSecurity)
                </label>
            </div>
        </div>

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary overlay-click" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/snap-emailaddress")
}