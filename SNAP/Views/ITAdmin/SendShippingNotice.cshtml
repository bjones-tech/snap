@model SNAP.Models.Persistent.Shipment

@{
    ViewBag.Title = "Send Shipping Notice";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@ViewBag.Heading</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.ValidationMessage("ShippersEmail", "", new { @class = "text-danger" })
        @Html.ValidationMessage("MailNotice", "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientsEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipientsEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientsEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (ViewData.ModelState["ManagersEmail"] != null && ViewData.ModelState["ManagersEmail"].Errors.Any())
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ManagersEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ManagersEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ManagersEmail, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Item, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Item, new SelectList(ViewBag.Items), "Please Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Item, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrackingNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TrackingNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TrackingNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send Notice" class="btn btn-primary overlay-click" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/snap-emailaddress")
}